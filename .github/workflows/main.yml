name: Main Point Workflow

on:
  push:
    branches:
      - deploy

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres
  DB_HOST: 127.0.0.1
  MODE: DEV
  DB_ENG: postgresql
  DB_PORT: 5432
  PG_PASS: postgres
  PG_USER: postgres
  DB_NAME: postgres
  TEST_DB_PORT: 5432
  TEST_PG_PASS: postgres
  TEST_PG_USER: postgres
  TEST_DB_ENG: postgresql
  TEST_DB_NAME: postgres
  TEST_DB_HOST: 127.0.0.1
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  ALGORITHM: ${{ secrets.ALGORITHM }}

jobs:
  backend_tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - uses: actions/cache@v2
      id: cache-venv
      with:
        path: ./.venv/
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt 
        python -m pip install -r requirements-DS.txt
        python -m pip install -r requirements-test.txt
        python -m pip install -r requirements-style.txt 
    - name: Test with flake8, mypy
      run: |
        python -m flake8 app/
        python -m mypy app/

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: backend_tests
    strategy:
      matrix:
        include:
          - name: backend
            directory: ./
          - name: gateway
            directory: ./gateway/
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.directory }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/point-${{ matrix.name }}:latest

  send_message:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой успешно выполнен!
